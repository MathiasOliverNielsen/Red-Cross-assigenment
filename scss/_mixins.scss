@use "variables" as *;

// Card Component Mixin
// Creates a card with image, heading, paragraph, and button
@mixin card-component($img-height: 200px, $padding: 1.5rem, $border-radius: 8px) {
  display: flex;
  flex-direction: column;
  background-color: $white;
  border-radius: $border-radius;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  img {
    width: 100%;
    height: $img-height;
    object-fit: cover;
    border-radius: 0;
  }

  .card-content {
    padding: $padding;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  h2 {
    font-family: $information-font;
    color: $black;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    line-height: 1.3;
  }

  p {
    font-family: $voice-font;
    color: $pms-cool-gray-11;
    font-size: 1rem;
    line-height: 1.6;
    margin-bottom: 1.5rem;
    flex-grow: 1;
  }

  button {
    background-color: $red-cross-red;
    color: $white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    font-family: $information-font;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s ease;
    align-self: flex-start;

    &:hover {
      background-color: darken($red-cross-red, 10%);
    }

    &:focus {
      outline: 2px solid $classic-blue;
      outline-offset: 2px;
    }
  }
}

// Alternative horizontal card layout
@mixin card-component-horizontal($img-width: 250px, $padding: 1.5rem) {
  display: flex;
  flex-direction: row;
  background-color: $white;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  img {
    width: $img-width;
    height: 100%;
    object-fit: cover;
    border-radius: 0;
  }

  .card-content {
    padding: $padding;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  h2 {
    font-family: $information-font;
    color: $black;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    line-height: 1.3;
  }

  p {
    font-family: $voice-font;
    color: $pms-cool-gray-11;
    font-size: 1rem;
    line-height: 1.6;
    margin-bottom: 1.5rem;
    flex-grow: 1;
  }

  button {
    background-color: $red-cross-red;
    color: $white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    font-family: $information-font;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s ease;
    align-self: flex-start;

    &:hover {
      background-color: darken($red-cross-red, 10%);
    }

    &:focus {
      outline: 2px solid $classic-blue;
      outline-offset: 2px;
    }
  }
}

// 4-Image Grid with Figures and Figcaptions
@mixin image-grid-4($gap: 1.5rem, $img-height: 250px, $caption-height: auto) {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: $gap;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;

  figure {
    margin: 0;
    background-color: $white;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    }

    img {
      width: 100%;
      height: $img-height;
      object-fit: cover;
      display: block;
      border-radius: 0;
    }

    figcaption {
      padding: 1rem;
      font-family: $information-font;
      font-size: 0.95rem;
      color: $pms-cool-gray-11;
      line-height: 1.5;
      text-align: center;
      background-color: $white;

      @if $caption-height != auto {
        height: $caption-height;
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }
}

// Alternative: Flexible grid that adapts to any number of images
@mixin image-grid-flexible($columns: 2, $gap: 1.5rem, $img-height: 250px) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;

  figure {
    margin: 0;
    background-color: $white;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    }

    img {
      width: 100%;
      height: $img-height;
      object-fit: cover;
      display: block;
      border-radius: 0;
    }

    figcaption {
      padding: 1rem;
      font-family: $information-font;
      font-size: 0.95rem;
      color: $pms-cool-gray-11;
      line-height: 1.5;
      text-align: center;
      background-color: $white;
    }
  }
}
